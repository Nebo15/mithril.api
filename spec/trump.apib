FORMAT: 1A
HOST: https://trump.herokuapp.com/

# Trump

Trump -  â€“ Auth & Role management system

Trump is known fo:

1. implementing OAuth2 flow (e.g. issuing tokens),
2. token verification service,
3. role management.

Trump consists of two main parts:

- [REST API back-end](https://github.com/Nebo15/trump.api),
- [Management UI](https://github.com/Nebo15/trump.web).

## Use Cases

- Issuing / revoking OAuth2 tokens,
- Answering a question "can a given token request a service?",
- Managing users / tokens / clients / user roles.

## Tokens [/tokens]

### Get a token [GET /tokens]

+ Request

  + Headers

            Accept-Charset: utf-8
            Content-Type: application/json
            Authentication: Bearer <token_value>

+ Response 200 (application/json)

        + data (Token)

### Create a token [POST]

+ Request (application/json)

    + Attributes

        + One of

            + token (object)

                + `grant_type`: `authorization_code` (string, fixed)
                + client_id (string, required)
                + client_secret (string, required)
                + redirect_uri (string, required)
                + code (string, required)

            + token (object)

                + `grant_type`: `client_credentials` (string, fixed)
                + client_id (string, required)
                + client_secret (string, required)

            + token (object)

                + `grant_type`: `password` (string, fixed)
                + client_id (string, required)
                + email (string, required)
                + password (string, required)
                + scope (string, required)

            + token (object)

                + `grant_type`: `refresh_token` (string, fixed)
                + client_id (string, required)
                + client_secret (string, required)
                + refresh_token (string, required)

+ Response 201 (application/json)

    + Attributes

        + meta

            + code: 201 (number)

        + data (Token)

# Data Structures

## Token (object)

+ id (string) - internal token ID
+ name (string) - name of token
+ value (string) - value of token
+ expires_at (string) - the datetime in ISO8601 format
+ details (object) - some token specifics
+ user_id (number) - ID of token bearer
